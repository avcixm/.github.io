name: Sync public pages to private CV

on:
  push:
    branches: [ main ]
    paths:
      - 'index.md'
      - 'teaching.md'
      - 'research.md'
      - 'supervision.md'
      - 'service_contributions.md'
      - 'professional_activities.md'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: sync-cv-to-private
  cancel-in-progress: true

jobs:
  build-cv:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Verify PAT secret
        run: |
          if [ -z "${{ secrets.PRIVATE_REPO_PAT }}" ] && [ -z "${{ secrets.CV_PRIVATE_PAT }}" ]; then
            echo "::error::Missing secret. Add PRIVATE_REPO_PAT (recommended) or CV_PRIVATE_PAT in Settings → Secrets and variables → Actions."
            exit 1
          fi

      - name: Checkout public repo
        uses: actions/checkout@v4

      - name: Build out/cv.md
        run: python3 .github/scripts/build_cv.py

      # ---------- New: Early, explicit access check ----------
      - name: Check access to private repo via API
        env:
          PAT1: ${{ secrets.PRIVATE_REPO_PAT }}
          PAT2: ${{ secrets.CV_PRIVATE_PAT }}
          DEST_REPO: ${{ secrets.CV_PRIVATE_REPO }}
        run: |
          set -euo pipefail
          GH_PAT="${PAT1:-${PAT2:-}}"
          [ -n "${GH_PAT}" ] || { echo "::error::No usable PAT found"; exit 1; }

          # Accept URL or slug, normalize to owner/repo
          REPO_SLUG="${DEST_REPO:-avcixm/cv-private}"
          REPO_SLUG="${REPO_SLUG#https://github.com/}"
          REPO_SLUG="${REPO_SLUG#git@github.com:}"
          REPO_SLUG="${REPO_SLUG%.git}"
          REPO_SLUG="$(echo -n "${REPO_SLUG}" | tr -d '[:space:]')"   # strip stray spaces/newlines

          # Call the API with the token; 200 means the token can read the repo
          code=$(curl -s -o /dev/null -w '%{http_code}' \
            -H "Authorization: token ${GH_PAT}" \
            "https://api.github.com/repos/${REPO_SLUG}")

          echo "API status for ${REPO_SLUG}: ${code}"
          if [ "$code" != "200" ]; then
            echo "::error::Cannot access ${REPO_SLUG} with the provided token (HTTP ${code})."
            echo "  - If code=404: repo slug wrong OR token lacks repo permission to a private repo."
            echo "  - If code=401: token invalid/expired."
            exit 1
          fi
      # -------------------------------------------------------

      - name: Clone private repo (cv-private)
        env:
          PAT1: ${{ secrets.PRIVATE_REPO_PAT }}
          PAT2: ${{ secrets.CV_PRIVATE_PAT }}
          DEST_REPO: ${{ secrets.CV_PRIVATE_REPO }}
        run: |
          set -euo pipefail
          GH_PAT="${PAT1:-${PAT2:-}}"

          REPO_SLUG="${DEST_REPO:-avcixm/cv-private}"
          REPO_SLUG="${REPO_SLUG#https://github.com/}"
          REPO_SLUG="${REPO_SLUG#git@github.com:}"
          REPO_SLUG="${REPO_SLUG%.git}"
          REPO_SLUG="$(echo -n "${REPO_SLUG}" | tr -d '[:space:]')"

          echo "[INFO] Cloning ${REPO_SLUG}"
          git clone "https://x-access-token:${GH_PAT}@github.com/${REPO_SLUG}.git" cvrepo
          cd cvrepo
          git config user.name  "github-actions"
          git config user.email "actions@github.com"

      - name: Update cv.md and push
        env:
          PAT1: ${{ secrets.PRIVATE_REPO_PAT }}
          PAT2: ${{ secrets.CV_PRIVATE_PAT }}
        run: |
          set -euo pipefail
          cp out/cv.md cvrepo/cv.md
          cd cvrepo
          git checkout main || git checkout -b main
          git pull --rebase origin main || true
          git add cv.md
          git commit -m "Sync from academicprofile ${GITHUB_SHA}" || echo "No changes to commit"
          git push origin HEAD:main
